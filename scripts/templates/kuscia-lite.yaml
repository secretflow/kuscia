# 部署模式
mode: Lite
# 节点ID
domainID: {{.DOMAIN_ID}}
# 节点私钥配置, 用于节点间的通信认证, 节点应用的证书签发， 经过 base64 编码。
# 示例：LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNRDhDQVFBQ0NRREdsY1Y3MTd5V3l3SURBUUFCQWdrQXR5RGVueG0wUGVFQ0JRRHJVTGUvQWdVQTJBcUQ5UUlFCmFuYkxtd0lFZWFaYUxRSUZBSjZ1S2tjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
domainKeyData: {{.DOMAIN_KEY_DATA}}

# 日志级别 INFO、DEBUG、WARN
logLevel: INFO

# master
# 节点连接 master 的部署 token，用于节点向 master 注册证书， 只在节点第一次向 master 注册证书时有效
liteDeployToken: {{.DEPLOY_TOKEN}}
# 节点连接 master 的地址
# 示例：https://172.18.0.2:1080
masterEndpoint: {{.MASTER_ENDPOINT}}

# runc or runk or runp
runtime: runc

# 当 runtime 为 runk 时配置
runk:
  # 任务调度到指定的机构 k8s namespace上
  namespace: ""
  # 机构 k8s 集群的 pod dns 配置， 用于解析节点的应用域名
  dnsServers:
#    - kuscia-dns-lb-server
  # k8s 集群的 kubeconfig, 不填默认 serviceaccount; 当前请不填，默认使用 serviceaccount
  kubeconfigFile:

# 节点可用于调度应用的容量，runc 不填会自动获取当前容器的系统资源, runk 模式下需要手动配置
capacity:
  cpu: #4
  memory: #8Gi
  pods: #500
  storage: #100Gi

# agent 镜像配置
image:
  pullPolicy: #使用镜像仓库|使用本地
  defaultRegistry: ""
  registries:
    - name: ""
      endpoint: ""
      username: ""
      password: ""