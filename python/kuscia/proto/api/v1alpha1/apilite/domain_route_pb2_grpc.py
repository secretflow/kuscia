# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from kuscia.proto.api.v1alpha1.apilite import domain_route_pb2 as kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2


class DomainRouteServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDomainRoute = channel.unary_unary(
                '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/CreateDomainRoute',
                request_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.CreateDomainRouteRequest.SerializeToString,
                response_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.CreateDomainRouteResponse.FromString,
                )
        self.DeleteDomainRoute = channel.unary_unary(
                '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/DeleteDomainRoute',
                request_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.DeleteDomainRouteRequest.SerializeToString,
                response_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.DeleteDomainRouteResponse.FromString,
                )
        self.QueryDomainRoute = channel.unary_unary(
                '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/QueryDomainRoute',
                request_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.QueryDomainRouteRequest.SerializeToString,
                response_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.QueryDomainRouteResponse.FromString,
                )
        self.BatchQueryDomainRouteStatus = channel.unary_unary(
                '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/BatchQueryDomainRouteStatus',
                request_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.BatchQueryDomainRouteStatusRequest.SerializeToString,
                response_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.BatchQueryDomainRouteStatusResponse.FromString,
                )


class DomainRouteServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateDomainRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDomainRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDomainRoute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchQueryDomainRouteStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DomainRouteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDomainRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDomainRoute,
                    request_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.CreateDomainRouteRequest.FromString,
                    response_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.CreateDomainRouteResponse.SerializeToString,
            ),
            'DeleteDomainRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDomainRoute,
                    request_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.DeleteDomainRouteRequest.FromString,
                    response_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.DeleteDomainRouteResponse.SerializeToString,
            ),
            'QueryDomainRoute': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDomainRoute,
                    request_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.QueryDomainRouteRequest.FromString,
                    response_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.QueryDomainRouteResponse.SerializeToString,
            ),
            'BatchQueryDomainRouteStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchQueryDomainRouteStatus,
                    request_deserializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.BatchQueryDomainRouteStatusRequest.FromString,
                    response_serializer=kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.BatchQueryDomainRouteStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kuscia.proto.api.v1alpha1.apilite.DomainRouteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DomainRouteService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateDomainRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/CreateDomainRoute',
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.CreateDomainRouteRequest.SerializeToString,
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.CreateDomainRouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDomainRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/DeleteDomainRoute',
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.DeleteDomainRouteRequest.SerializeToString,
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.DeleteDomainRouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryDomainRoute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/QueryDomainRoute',
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.QueryDomainRouteRequest.SerializeToString,
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.QueryDomainRouteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchQueryDomainRouteStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kuscia.proto.api.v1alpha1.apilite.DomainRouteService/BatchQueryDomainRouteStatus',
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.BatchQueryDomainRouteStatusRequest.SerializeToString,
            kuscia_dot_proto_dot_api_dot_v1alpha1_dot_apilite_dot_domain__route__pb2.BatchQueryDomainRouteStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
