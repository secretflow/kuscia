// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/secretflow/kuscia/pkg/crd/apis/kuscia/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KusciaJobLister helps list KusciaJobs.
// All objects returned here must be treated as read-only.
type KusciaJobLister interface {
	// List lists all KusciaJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KusciaJob, err error)
	// KusciaJobs returns an object that can list and get KusciaJobs.
	KusciaJobs(namespace string) KusciaJobNamespaceLister
	KusciaJobListerExpansion
}

// kusciaJobLister implements the KusciaJobLister interface.
type kusciaJobLister struct {
	indexer cache.Indexer
}

// NewKusciaJobLister returns a new KusciaJobLister.
func NewKusciaJobLister(indexer cache.Indexer) KusciaJobLister {
	return &kusciaJobLister{indexer: indexer}
}

// List lists all KusciaJobs in the indexer.
func (s *kusciaJobLister) List(selector labels.Selector) (ret []*v1alpha1.KusciaJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KusciaJob))
	})
	return ret, err
}

// KusciaJobs returns an object that can list and get KusciaJobs.
func (s *kusciaJobLister) KusciaJobs(namespace string) KusciaJobNamespaceLister {
	return kusciaJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KusciaJobNamespaceLister helps list and get KusciaJobs.
// All objects returned here must be treated as read-only.
type KusciaJobNamespaceLister interface {
	// List lists all KusciaJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KusciaJob, err error)
	// Get retrieves the KusciaJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KusciaJob, error)
	KusciaJobNamespaceListerExpansion
}

// kusciaJobNamespaceLister implements the KusciaJobNamespaceLister
// interface.
type kusciaJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KusciaJobs in the indexer for a given namespace.
func (s kusciaJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KusciaJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KusciaJob))
	})
	return ret, err
}

// Get retrieves the KusciaJob from the indexer for a given namespace and name.
func (s kusciaJobNamespaceLister) Get(name string) (*v1alpha1.KusciaJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kusciajob"), name)
	}
	return obj.(*v1alpha1.KusciaJob), nil
}
