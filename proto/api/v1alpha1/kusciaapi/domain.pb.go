// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: kuscia/proto/api/v1alpha1/kusciaapi/domain.proto

package kusciaapi

import (
	v1alpha1 "github.com/secretflow/kuscia/proto/api/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainId       string                  `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Role           string                  `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Cert           string                  `protobuf:"bytes,4,opt,name=cert,proto3" json:"cert,omitempty"`
	AuthCenter     *AuthCenter             `protobuf:"bytes,5,opt,name=auth_center,json=authCenter,proto3" json:"auth_center,omitempty"`
	MasterDomainId string                  `protobuf:"bytes,6,opt,name=master_domain_id,json=masterDomainId,proto3" json:"master_domain_id,omitempty"`
}

func (x *CreateDomainRequest) Reset() {
	*x = CreateDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainRequest) ProtoMessage() {}

func (x *CreateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDomainRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateDomainRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *CreateDomainRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateDomainRequest) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *CreateDomainRequest) GetAuthCenter() *AuthCenter {
	if x != nil {
		return x.AuthCenter
	}
	return nil
}

func (x *CreateDomainRequest) GetMasterDomainId() string {
	if x != nil {
		return x.MasterDomainId
	}
	return ""
}

type CreateDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateDomainResponse) Reset() {
	*x = CreateDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainResponse) ProtoMessage() {}

func (x *CreateDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainResponse.ProtoReflect.Descriptor instead.
func (*CreateDomainResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDomainResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header   *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainId string                  `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *DeleteDomainRequest) Reset() {
	*x = DeleteDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainRequest) ProtoMessage() {}

func (x *DeleteDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainRequest.ProtoReflect.Descriptor instead.
func (*DeleteDomainRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteDomainRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteDomainRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type DeleteDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteDomainResponse) Reset() {
	*x = DeleteDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainResponse) ProtoMessage() {}

func (x *DeleteDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainResponse.ProtoReflect.Descriptor instead.
func (*DeleteDomainResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDomainResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type QueryDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header   *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainId string                  `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *QueryDomainRequest) Reset() {
	*x = QueryDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDomainRequest) ProtoMessage() {}

func (x *QueryDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDomainRequest.ProtoReflect.Descriptor instead.
func (*QueryDomainRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{4}
}

func (x *QueryDomainRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *QueryDomainRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type QueryDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *QueryDomainResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryDomainResponse) Reset() {
	*x = QueryDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDomainResponse) ProtoMessage() {}

func (x *QueryDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDomainResponse.ProtoReflect.Descriptor instead.
func (*QueryDomainResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{5}
}

func (x *QueryDomainResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryDomainResponse) GetData() *QueryDomainResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueryDomainResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId            string               `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Role                string               `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Cert                string               `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	NodeStatuses        []*NodeStatus        `protobuf:"bytes,4,rep,name=node_statuses,json=nodeStatuses,proto3" json:"node_statuses,omitempty"`
	DeployTokenStatuses []*DeployTokenStatus `protobuf:"bytes,5,rep,name=deploy_token_statuses,json=deployTokenStatuses,proto3" json:"deploy_token_statuses,omitempty"`
	Annotations         map[string]string    `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AuthCenter          *AuthCenter          `protobuf:"bytes,7,opt,name=auth_center,json=authCenter,proto3" json:"auth_center,omitempty"`
	MasterDomainId      string               `protobuf:"bytes,8,opt,name=master_domain_id,json=masterDomainId,proto3" json:"master_domain_id,omitempty"`
}

func (x *QueryDomainResponseData) Reset() {
	*x = QueryDomainResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDomainResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDomainResponseData) ProtoMessage() {}

func (x *QueryDomainResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDomainResponseData.ProtoReflect.Descriptor instead.
func (*QueryDomainResponseData) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{6}
}

func (x *QueryDomainResponseData) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *QueryDomainResponseData) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *QueryDomainResponseData) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *QueryDomainResponseData) GetNodeStatuses() []*NodeStatus {
	if x != nil {
		return x.NodeStatuses
	}
	return nil
}

func (x *QueryDomainResponseData) GetDeployTokenStatuses() []*DeployTokenStatus {
	if x != nil {
		return x.DeployTokenStatuses
	}
	return nil
}

func (x *QueryDomainResponseData) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *QueryDomainResponseData) GetAuthCenter() *AuthCenter {
	if x != nil {
		return x.AuthCenter
	}
	return nil
}

func (x *QueryDomainResponseData) GetMasterDomainId() string {
	if x != nil {
		return x.MasterDomainId
	}
	return ""
}

type NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status             string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Version            string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	LastHeartbeatTime  string `protobuf:"bytes,4,opt,name=last_heartbeat_time,json=lastHeartbeatTime,proto3" json:"last_heartbeat_time,omitempty"`
	LastTransitionTime string `protobuf:"bytes,5,opt,name=last_transition_time,json=lastTransitionTime,proto3" json:"last_transition_time,omitempty"`
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{7}
}

func (x *NodeStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *NodeStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeStatus) GetLastHeartbeatTime() string {
	if x != nil {
		return x.LastHeartbeatTime
	}
	return ""
}

func (x *NodeStatus) GetLastTransitionTime() string {
	if x != nil {
		return x.LastTransitionTime
	}
	return ""
}

type UpdateDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header         *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainId       string                  `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Role           string                  `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Cert           string                  `protobuf:"bytes,4,opt,name=cert,proto3" json:"cert,omitempty"`
	AuthCenter     *AuthCenter             `protobuf:"bytes,5,opt,name=auth_center,json=authCenter,proto3" json:"auth_center,omitempty"`
	MasterDomainId string                  `protobuf:"bytes,6,opt,name=master_domain_id,json=masterDomainId,proto3" json:"master_domain_id,omitempty"`
}

func (x *UpdateDomainRequest) Reset() {
	*x = UpdateDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainRequest) ProtoMessage() {}

func (x *UpdateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainRequest.ProtoReflect.Descriptor instead.
func (*UpdateDomainRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDomainRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdateDomainRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *UpdateDomainRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UpdateDomainRequest) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *UpdateDomainRequest) GetAuthCenter() *AuthCenter {
	if x != nil {
		return x.AuthCenter
	}
	return nil
}

func (x *UpdateDomainRequest) GetMasterDomainId() string {
	if x != nil {
		return x.MasterDomainId
	}
	return ""
}

type UpdateDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateDomainResponse) Reset() {
	*x = UpdateDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainResponse) ProtoMessage() {}

func (x *UpdateDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainResponse.ProtoReflect.Descriptor instead.
func (*UpdateDomainResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDomainResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type BatchQueryDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header    *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainIds []string                `protobuf:"bytes,2,rep,name=domain_ids,json=domainIds,proto3" json:"domain_ids,omitempty"`
}

func (x *BatchQueryDomainRequest) Reset() {
	*x = BatchQueryDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchQueryDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryDomainRequest) ProtoMessage() {}

func (x *BatchQueryDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryDomainRequest.ProtoReflect.Descriptor instead.
func (*BatchQueryDomainRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{10}
}

func (x *BatchQueryDomainRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchQueryDomainRequest) GetDomainIds() []string {
	if x != nil {
		return x.DomainIds
	}
	return nil
}

type BatchQueryDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *BatchQueryDomainResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchQueryDomainResponse) Reset() {
	*x = BatchQueryDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchQueryDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryDomainResponse) ProtoMessage() {}

func (x *BatchQueryDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryDomainResponse.ProtoReflect.Descriptor instead.
func (*BatchQueryDomainResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{11}
}

func (x *BatchQueryDomainResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BatchQueryDomainResponse) GetData() *BatchQueryDomainResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchQueryDomainResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domains []*Domain `protobuf:"bytes,1,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *BatchQueryDomainResponseData) Reset() {
	*x = BatchQueryDomainResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchQueryDomainResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryDomainResponseData) ProtoMessage() {}

func (x *BatchQueryDomainResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryDomainResponseData.ProtoReflect.Descriptor instead.
func (*BatchQueryDomainResponseData) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{12}
}

func (x *BatchQueryDomainResponseData) GetDomains() []*Domain {
	if x != nil {
		return x.Domains
	}
	return nil
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId     string        `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	Role         string        `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Cert         string        `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	NodeStatuses []*NodeStatus `protobuf:"bytes,4,rep,name=node_statuses,json=nodeStatuses,proto3" json:"node_statuses,omitempty"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{13}
}

func (x *Domain) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *Domain) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Domain) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *Domain) GetNodeStatuses() []*NodeStatus {
	if x != nil {
		return x.NodeStatuses
	}
	return nil
}

type DeployTokenStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deploy token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// used or unused
	State              string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	LastTransitionTime string `protobuf:"bytes,3,opt,name=last_transition_time,json=lastTransitionTime,proto3" json:"last_transition_time,omitempty"`
}

func (x *DeployTokenStatus) Reset() {
	*x = DeployTokenStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTokenStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTokenStatus) ProtoMessage() {}

func (x *DeployTokenStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTokenStatus.ProtoReflect.Descriptor instead.
func (*DeployTokenStatus) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{14}
}

func (x *DeployTokenStatus) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DeployTokenStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *DeployTokenStatus) GetLastTransitionTime() string {
	if x != nil {
		return x.LastTransitionTime
	}
	return ""
}

type AuthCenter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token
	AuthenticationType string `protobuf:"bytes,1,opt,name=authentication_type,json=authenticationType,proto3" json:"authentication_type,omitempty"`
	// UID-RSA-GEN
	TokenGenMethod string `protobuf:"bytes,2,opt,name=token_gen_method,json=tokenGenMethod,proto3" json:"token_gen_method,omitempty"`
}

func (x *AuthCenter) Reset() {
	*x = AuthCenter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthCenter) ProtoMessage() {}

func (x *AuthCenter) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthCenter.ProtoReflect.Descriptor instead.
func (*AuthCenter) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP(), []int{15}
}

func (x *AuthCenter) GetAuthenticationType() string {
	if x != nil {
		return x.AuthenticationType
	}
	return ""
}

func (x *AuthCenter) GetTokenGenMethod() string {
	if x != nil {
		return x.TokenGenMethod
	}
	return ""
}

var File_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto protoreflect.FileDescriptor

var file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x23, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x1a, 0x26, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x98, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x50,
	0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x74, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x13,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xcd, 0x04, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72,
	0x74, 0x12, 0x54, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x15, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x13,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xb4, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x98, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x50, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x73, 0x22, 0xac, 0x01, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x55, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x65, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x45, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x07,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x71, 0x0a,
	0x11, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x67, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x47, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x32, 0xb6, 0x05, 0x0a, 0x0d, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x80, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x37, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8f, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x3c, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x5e, 0x0a, 0x21, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescOnce sync.Once
	file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescData = file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDesc
)

func file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescGZIP() []byte {
	file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescOnce.Do(func() {
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescData = protoimpl.X.CompressGZIP(file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescData)
	})
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDescData
}

var file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_goTypes = []interface{}{
	(*CreateDomainRequest)(nil),          // 0: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainRequest
	(*CreateDomainResponse)(nil),         // 1: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainResponse
	(*DeleteDomainRequest)(nil),          // 2: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainRequest
	(*DeleteDomainResponse)(nil),         // 3: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainResponse
	(*QueryDomainRequest)(nil),           // 4: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainRequest
	(*QueryDomainResponse)(nil),          // 5: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponse
	(*QueryDomainResponseData)(nil),      // 6: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData
	(*NodeStatus)(nil),                   // 7: kuscia.proto.api.v1alpha1.kusciaapi.NodeStatus
	(*UpdateDomainRequest)(nil),          // 8: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainRequest
	(*UpdateDomainResponse)(nil),         // 9: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainResponse
	(*BatchQueryDomainRequest)(nil),      // 10: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainRequest
	(*BatchQueryDomainResponse)(nil),     // 11: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponse
	(*BatchQueryDomainResponseData)(nil), // 12: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponseData
	(*Domain)(nil),                       // 13: kuscia.proto.api.v1alpha1.kusciaapi.Domain
	(*DeployTokenStatus)(nil),            // 14: kuscia.proto.api.v1alpha1.kusciaapi.DeployTokenStatus
	(*AuthCenter)(nil),                   // 15: kuscia.proto.api.v1alpha1.kusciaapi.AuthCenter
	nil,                                  // 16: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData.AnnotationsEntry
	(*v1alpha1.RequestHeader)(nil),       // 17: kuscia.proto.api.v1alpha1.RequestHeader
	(*v1alpha1.Status)(nil),              // 18: kuscia.proto.api.v1alpha1.Status
}
var file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_depIdxs = []int32{
	17, // 0: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	15, // 1: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainRequest.auth_center:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.AuthCenter
	18, // 2: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	17, // 3: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	18, // 4: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	17, // 5: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	18, // 6: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	6,  // 7: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponse.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData
	7,  // 8: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData.node_statuses:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.NodeStatus
	14, // 9: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData.deploy_token_statuses:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DeployTokenStatus
	16, // 10: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData.annotations:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData.AnnotationsEntry
	15, // 11: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponseData.auth_center:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.AuthCenter
	17, // 12: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	15, // 13: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainRequest.auth_center:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.AuthCenter
	18, // 14: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	17, // 15: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	18, // 16: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	12, // 17: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponse.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponseData
	13, // 18: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponseData.domains:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.Domain
	7,  // 19: kuscia.proto.api.v1alpha1.kusciaapi.Domain.node_statuses:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.NodeStatus
	0,  // 20: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.CreateDomain:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainRequest
	4,  // 21: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.QueryDomain:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainRequest
	8,  // 22: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.UpdateDomain:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainRequest
	2,  // 23: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.DeleteDomain:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainRequest
	10, // 24: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.BatchQueryDomain:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainRequest
	1,  // 25: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.CreateDomain:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainResponse
	5,  // 26: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.QueryDomain:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainResponse
	9,  // 27: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.UpdateDomain:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainResponse
	3,  // 28: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.DeleteDomain:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainResponse
	11, // 29: kuscia.proto.api.v1alpha1.kusciaapi.DomainService.BatchQueryDomain:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_init() }
func file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_init() {
	if File_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDomainResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchQueryDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchQueryDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchQueryDomainResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTokenStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthCenter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_goTypes,
		DependencyIndexes: file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_depIdxs,
		MessageInfos:      file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_msgTypes,
	}.Build()
	File_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto = out.File
	file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_rawDesc = nil
	file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_goTypes = nil
	file_kuscia_proto_api_v1alpha1_kusciaapi_domain_proto_depIdxs = nil
}
