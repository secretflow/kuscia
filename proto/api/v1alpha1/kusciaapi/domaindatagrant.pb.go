// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: kuscia/proto/api/v1alpha1/kusciaapi/domaindatagrant.proto

package kusciaapi

import (
	v1alpha1 "github.com/secretflow/kuscia/proto/api/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDomainDataGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header            *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomaindatagrantId string                  `protobuf:"bytes,2,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
	DomaindataId      string                  `protobuf:"bytes,3,opt,name=domaindata_id,json=domaindataId,proto3" json:"domaindata_id,omitempty"`
	GrantDomain       string                  `protobuf:"bytes,4,opt,name=grant_domain,json=grantDomain,proto3" json:"grant_domain,omitempty"`
	Limit             *GrantLimit             `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Description       map[string]string       `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Signature         string                  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	DomainId          string                  `protobuf:"bytes,8,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *CreateDomainDataGrantRequest) Reset() {
	*x = CreateDomainDataGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainDataGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainDataGrantRequest) ProtoMessage() {}

func (x *CreateDomainDataGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainDataGrantRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainDataGrantRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDomainDataGrantRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CreateDomainDataGrantRequest) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

func (x *CreateDomainDataGrantRequest) GetDomaindataId() string {
	if x != nil {
		return x.DomaindataId
	}
	return ""
}

func (x *CreateDomainDataGrantRequest) GetGrantDomain() string {
	if x != nil {
		return x.GrantDomain
	}
	return ""
}

func (x *CreateDomainDataGrantRequest) GetLimit() *GrantLimit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *CreateDomainDataGrantRequest) GetDescription() map[string]string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *CreateDomainDataGrantRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *CreateDomainDataGrantRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type CreateDomainDataGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *CreateDomainDataGrantResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateDomainDataGrantResponse) Reset() {
	*x = CreateDomainDataGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainDataGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainDataGrantResponse) ProtoMessage() {}

func (x *CreateDomainDataGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainDataGrantResponse.ProtoReflect.Descriptor instead.
func (*CreateDomainDataGrantResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDomainDataGrantResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CreateDomainDataGrantResponse) GetData() *CreateDomainDataGrantResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateDomainDataGrantResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id of created domaindatagrant
	DomaindatagrantId string `protobuf:"bytes,1,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
}

func (x *CreateDomainDataGrantResponseData) Reset() {
	*x = CreateDomainDataGrantResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainDataGrantResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainDataGrantResponseData) ProtoMessage() {}

func (x *CreateDomainDataGrantResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainDataGrantResponseData.ProtoReflect.Descriptor instead.
func (*CreateDomainDataGrantResponseData) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDomainDataGrantResponseData) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

type DomainDataGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DomainDataGrantData   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Status *DomainDataGrantStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DomainDataGrant) Reset() {
	*x = DomainDataGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainDataGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainDataGrant) ProtoMessage() {}

func (x *DomainDataGrant) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainDataGrant.ProtoReflect.Descriptor instead.
func (*DomainDataGrant) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{3}
}

func (x *DomainDataGrant) GetData() *DomainDataGrantData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DomainDataGrant) GetStatus() *DomainDataGrantStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type DomainDataGrantStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase   string       `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Records []*UseRecord `protobuf:"bytes,3,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *DomainDataGrantStatus) Reset() {
	*x = DomainDataGrantStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainDataGrantStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainDataGrantStatus) ProtoMessage() {}

func (x *DomainDataGrantStatus) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainDataGrantStatus.ProtoReflect.Descriptor instead.
func (*DomainDataGrantStatus) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{4}
}

func (x *DomainDataGrantStatus) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *DomainDataGrantStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DomainDataGrantStatus) GetRecords() []*UseRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type UseRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseTime     int64  `protobuf:"varint,1,opt,name=use_time,json=useTime,proto3" json:"use_time,omitempty"`
	GrantDomain string `protobuf:"bytes,2,opt,name=grant_domain,json=grantDomain,proto3" json:"grant_domain,omitempty"`
	Component   string `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`
	Output      string `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *UseRecord) Reset() {
	*x = UseRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseRecord) ProtoMessage() {}

func (x *UseRecord) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseRecord.ProtoReflect.Descriptor instead.
func (*UseRecord) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{5}
}

func (x *UseRecord) GetUseTime() int64 {
	if x != nil {
		return x.UseTime
	}
	return 0
}

func (x *UseRecord) GetGrantDomain() string {
	if x != nil {
		return x.GrantDomain
	}
	return ""
}

func (x *UseRecord) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *UseRecord) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type DomainDataGrantData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomaindatagrantId string            `protobuf:"bytes,1,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
	Author            string            `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	DomaindataId      string            `protobuf:"bytes,3,opt,name=domaindata_id,json=domaindataId,proto3" json:"domaindata_id,omitempty"`
	GrantDomain       string            `protobuf:"bytes,4,opt,name=grant_domain,json=grantDomain,proto3" json:"grant_domain,omitempty"`
	Limit             *GrantLimit       `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Description       map[string]string `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Signature         string            `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	DomainId          string            `protobuf:"bytes,8,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *DomainDataGrantData) Reset() {
	*x = DomainDataGrantData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainDataGrantData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainDataGrantData) ProtoMessage() {}

func (x *DomainDataGrantData) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainDataGrantData.ProtoReflect.Descriptor instead.
func (*DomainDataGrantData) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{6}
}

func (x *DomainDataGrantData) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

func (x *DomainDataGrantData) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *DomainDataGrantData) GetDomaindataId() string {
	if x != nil {
		return x.DomaindataId
	}
	return ""
}

func (x *DomainDataGrantData) GetGrantDomain() string {
	if x != nil {
		return x.GrantDomain
	}
	return ""
}

func (x *DomainDataGrantData) GetLimit() *GrantLimit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *DomainDataGrantData) GetDescription() map[string]string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *DomainDataGrantData) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *DomainDataGrantData) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type GrantLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpirationTime int64    `protobuf:"varint,1,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	UseCount       int32    `protobuf:"varint,2,opt,name=use_count,json=useCount,proto3" json:"use_count,omitempty"`
	FlowId         string   `protobuf:"bytes,3,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	Components     []string `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty"`
	Initiator      string   `protobuf:"bytes,5,opt,name=initiator,proto3" json:"initiator,omitempty"`
	InputConfig    string   `protobuf:"bytes,6,opt,name=input_config,json=inputConfig,proto3" json:"input_config,omitempty"`
}

func (x *GrantLimit) Reset() {
	*x = GrantLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantLimit) ProtoMessage() {}

func (x *GrantLimit) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantLimit.ProtoReflect.Descriptor instead.
func (*GrantLimit) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{7}
}

func (x *GrantLimit) GetExpirationTime() int64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *GrantLimit) GetUseCount() int32 {
	if x != nil {
		return x.UseCount
	}
	return 0
}

func (x *GrantLimit) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *GrantLimit) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GrantLimit) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *GrantLimit) GetInputConfig() string {
	if x != nil {
		return x.InputConfig
	}
	return ""
}

type UpdateDomainDataGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header            *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomaindatagrantId string                  `protobuf:"bytes,2,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
	DomaindataId      string                  `protobuf:"bytes,3,opt,name=domaindata_id,json=domaindataId,proto3" json:"domaindata_id,omitempty"`
	GrantDomain       string                  `protobuf:"bytes,4,opt,name=grant_domain,json=grantDomain,proto3" json:"grant_domain,omitempty"`
	Limit             *GrantLimit             `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Description       map[string]string       `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Signature         string                  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	DomainId          string                  `protobuf:"bytes,8,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
}

func (x *UpdateDomainDataGrantRequest) Reset() {
	*x = UpdateDomainDataGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainDataGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainDataGrantRequest) ProtoMessage() {}

func (x *UpdateDomainDataGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainDataGrantRequest.ProtoReflect.Descriptor instead.
func (*UpdateDomainDataGrantRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDomainDataGrantRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *UpdateDomainDataGrantRequest) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

func (x *UpdateDomainDataGrantRequest) GetDomaindataId() string {
	if x != nil {
		return x.DomaindataId
	}
	return ""
}

func (x *UpdateDomainDataGrantRequest) GetGrantDomain() string {
	if x != nil {
		return x.GrantDomain
	}
	return ""
}

func (x *UpdateDomainDataGrantRequest) GetLimit() *GrantLimit {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *UpdateDomainDataGrantRequest) GetDescription() map[string]string {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateDomainDataGrantRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *UpdateDomainDataGrantRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

type UpdateDomainDataGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateDomainDataGrantResponse) Reset() {
	*x = UpdateDomainDataGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainDataGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainDataGrantResponse) ProtoMessage() {}

func (x *UpdateDomainDataGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainDataGrantResponse.ProtoReflect.Descriptor instead.
func (*UpdateDomainDataGrantResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDomainDataGrantResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteDomainDataGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header            *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainId          string                  `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	DomaindatagrantId string                  `protobuf:"bytes,3,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
}

func (x *DeleteDomainDataGrantRequest) Reset() {
	*x = DeleteDomainDataGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainDataGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainDataGrantRequest) ProtoMessage() {}

func (x *DeleteDomainDataGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainDataGrantRequest.ProtoReflect.Descriptor instead.
func (*DeleteDomainDataGrantRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteDomainDataGrantRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteDomainDataGrantRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *DeleteDomainDataGrantRequest) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

type DeleteDomainDataGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeleteDomainDataGrantResponse) Reset() {
	*x = DeleteDomainDataGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainDataGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainDataGrantResponse) ProtoMessage() {}

func (x *DeleteDomainDataGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainDataGrantResponse.ProtoReflect.Descriptor instead.
func (*DeleteDomainDataGrantResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDomainDataGrantResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type QueryDomainDataGrantRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId          string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	DomaindatagrantId string `protobuf:"bytes,2,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
}

func (x *QueryDomainDataGrantRequestData) Reset() {
	*x = QueryDomainDataGrantRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDomainDataGrantRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDomainDataGrantRequestData) ProtoMessage() {}

func (x *QueryDomainDataGrantRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDomainDataGrantRequestData.ProtoReflect.Descriptor instead.
func (*QueryDomainDataGrantRequestData) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{12}
}

func (x *QueryDomainDataGrantRequestData) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *QueryDomainDataGrantRequestData) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

type QueryDomainDataGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header            *v1alpha1.RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	DomainId          string                  `protobuf:"bytes,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	DomaindatagrantId string                  `protobuf:"bytes,3,opt,name=domaindatagrant_id,json=domaindatagrantId,proto3" json:"domaindatagrant_id,omitempty"`
}

func (x *QueryDomainDataGrantRequest) Reset() {
	*x = QueryDomainDataGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDomainDataGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDomainDataGrantRequest) ProtoMessage() {}

func (x *QueryDomainDataGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDomainDataGrantRequest.ProtoReflect.Descriptor instead.
func (*QueryDomainDataGrantRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{13}
}

func (x *QueryDomainDataGrantRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *QueryDomainDataGrantRequest) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *QueryDomainDataGrantRequest) GetDomaindatagrantId() string {
	if x != nil {
		return x.DomaindatagrantId
	}
	return ""
}

type QueryDomainDataGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *DomainDataGrant `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryDomainDataGrantResponse) Reset() {
	*x = QueryDomainDataGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDomainDataGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDomainDataGrantResponse) ProtoMessage() {}

func (x *QueryDomainDataGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDomainDataGrantResponse.ProtoReflect.Descriptor instead.
func (*QueryDomainDataGrantResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{14}
}

func (x *QueryDomainDataGrantResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryDomainDataGrantResponse) GetData() *DomainDataGrant {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchQueryDomainDataGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *v1alpha1.RequestHeader            `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   []*QueryDomainDataGrantRequestData `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchQueryDomainDataGrantRequest) Reset() {
	*x = BatchQueryDomainDataGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchQueryDomainDataGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryDomainDataGrantRequest) ProtoMessage() {}

func (x *BatchQueryDomainDataGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryDomainDataGrantRequest.ProtoReflect.Descriptor instead.
func (*BatchQueryDomainDataGrantRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{15}
}

func (x *BatchQueryDomainDataGrantRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *BatchQueryDomainDataGrantRequest) GetData() []*QueryDomainDataGrantRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchQueryDomainDataGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   []*DomainDataGrant `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BatchQueryDomainDataGrantResponse) Reset() {
	*x = BatchQueryDomainDataGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchQueryDomainDataGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchQueryDomainDataGrantResponse) ProtoMessage() {}

func (x *BatchQueryDomainDataGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchQueryDomainDataGrantResponse.ProtoReflect.Descriptor instead.
func (*BatchQueryDomainDataGrantResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{16}
}

func (x *BatchQueryDomainDataGrantResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BatchQueryDomainDataGrantResponse) GetData() []*DomainDataGrant {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListDomainDataGrantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *v1alpha1.RequestHeader         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data   *ListDomainDataGrantRequestData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListDomainDataGrantRequest) Reset() {
	*x = ListDomainDataGrantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDataGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDataGrantRequest) ProtoMessage() {}

func (x *ListDomainDataGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDataGrantRequest.ProtoReflect.Descriptor instead.
func (*ListDomainDataGrantRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{17}
}

func (x *ListDomainDataGrantRequest) GetHeader() *v1alpha1.RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ListDomainDataGrantRequest) GetData() *ListDomainDataGrantRequestData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListDomainDataGrantRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId         string `protobuf:"bytes,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	GrantDomain      string `protobuf:"bytes,2,opt,name=grant_domain,json=grantDomain,proto3" json:"grant_domain,omitempty"`
	DomaindataVendor string `protobuf:"bytes,3,opt,name=domaindata_vendor,json=domaindataVendor,proto3" json:"domaindata_vendor,omitempty"`
}

func (x *ListDomainDataGrantRequestData) Reset() {
	*x = ListDomainDataGrantRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDataGrantRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDataGrantRequestData) ProtoMessage() {}

func (x *ListDomainDataGrantRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDataGrantRequestData.ProtoReflect.Descriptor instead.
func (*ListDomainDataGrantRequestData) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{18}
}

func (x *ListDomainDataGrantRequestData) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *ListDomainDataGrantRequestData) GetGrantDomain() string {
	if x != nil {
		return x.GrantDomain
	}
	return ""
}

func (x *ListDomainDataGrantRequestData) GetDomaindataVendor() string {
	if x != nil {
		return x.DomaindataVendor
	}
	return ""
}

type ListDomainDataGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *v1alpha1.Status     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *DomainDataGrantList `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ListDomainDataGrantResponse) Reset() {
	*x = ListDomainDataGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDataGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDataGrantResponse) ProtoMessage() {}

func (x *ListDomainDataGrantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDataGrantResponse.ProtoReflect.Descriptor instead.
func (*ListDomainDataGrantResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{19}
}

func (x *ListDomainDataGrantResponse) GetStatus() *v1alpha1.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListDomainDataGrantResponse) GetData() *DomainDataGrantList {
	if x != nil {
		return x.Data
	}
	return nil
}

type DomainDataGrantList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomaindatagrantList []*DomainDataGrant `protobuf:"bytes,1,rep,name=domaindatagrant_list,json=domaindatagrantList,proto3" json:"domaindatagrant_list,omitempty"`
}

func (x *DomainDataGrantList) Reset() {
	*x = DomainDataGrantList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainDataGrantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainDataGrantList) ProtoMessage() {}

func (x *DomainDataGrantList) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainDataGrantList.ProtoReflect.Descriptor instead.
func (*DomainDataGrantList) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP(), []int{20}
}

func (x *DomainDataGrantList) GetDomaindatagrantList() []*DomainDataGrant {
	if x != nil {
		return x.DomaindatagrantList
	}
	return nil
}

var File_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto protoreflect.FileDescriptor

var file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDesc = []byte{
	0x0a, 0x39, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69,
	0x1a, 0x26, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x04, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64,
	0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x45, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x74, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb6, 0x01, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x15, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0x7f, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0xd3, 0x03, 0x0a, 0x13, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61,
	0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x45, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x6b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcc, 0x01, 0x0a, 0x0a, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x8f, 0x04, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61,
	0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x45, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x74, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5a, 0x0a, 0x1d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64,
	0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6d, 0x0a, 0x1f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xab, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa3, 0x01,
	0x0a, 0x1c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xbe, 0x01, 0x0a, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x21, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xb7, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x57, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x1e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64,
	0x61, 0x74, 0x61, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x1b, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x7e, 0x0a, 0x13, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a, 0x14, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x13, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x32, 0xe1, 0x07, 0x0a, 0x16, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9e, 0x01,
	0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x41, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9e,
	0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x41, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x9e, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x41, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x9b, 0x01, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x40, 0x2e, 0x6b, 0x75, 0x73, 0x63,
	0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70,
	0x69, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xaa,
	0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x45, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x3f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x5e, 0x0a, 0x21, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescOnce sync.Once
	file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescData = file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDesc
)

func file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescGZIP() []byte {
	file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescOnce.Do(func() {
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescData = protoimpl.X.CompressGZIP(file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescData)
	})
	return file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDescData
}

var file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_goTypes = []interface{}{
	(*CreateDomainDataGrantRequest)(nil),      // 0: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest
	(*CreateDomainDataGrantResponse)(nil),     // 1: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantResponse
	(*CreateDomainDataGrantResponseData)(nil), // 2: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantResponseData
	(*DomainDataGrant)(nil),                   // 3: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrant
	(*DomainDataGrantStatus)(nil),             // 4: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantStatus
	(*UseRecord)(nil),                         // 5: kuscia.proto.api.v1alpha1.kusciaapi.UseRecord
	(*DomainDataGrantData)(nil),               // 6: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantData
	(*GrantLimit)(nil),                        // 7: kuscia.proto.api.v1alpha1.kusciaapi.GrantLimit
	(*UpdateDomainDataGrantRequest)(nil),      // 8: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest
	(*UpdateDomainDataGrantResponse)(nil),     // 9: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantResponse
	(*DeleteDomainDataGrantRequest)(nil),      // 10: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainDataGrantRequest
	(*DeleteDomainDataGrantResponse)(nil),     // 11: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainDataGrantResponse
	(*QueryDomainDataGrantRequestData)(nil),   // 12: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantRequestData
	(*QueryDomainDataGrantRequest)(nil),       // 13: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantRequest
	(*QueryDomainDataGrantResponse)(nil),      // 14: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantResponse
	(*BatchQueryDomainDataGrantRequest)(nil),  // 15: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantRequest
	(*BatchQueryDomainDataGrantResponse)(nil), // 16: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantResponse
	(*ListDomainDataGrantRequest)(nil),        // 17: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantRequest
	(*ListDomainDataGrantRequestData)(nil),    // 18: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantRequestData
	(*ListDomainDataGrantResponse)(nil),       // 19: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantResponse
	(*DomainDataGrantList)(nil),               // 20: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantList
	nil,                                       // 21: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest.DescriptionEntry
	nil,                                       // 22: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantData.DescriptionEntry
	nil,                                       // 23: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest.DescriptionEntry
	(*v1alpha1.RequestHeader)(nil),            // 24: kuscia.proto.api.v1alpha1.RequestHeader
	(*v1alpha1.Status)(nil),                   // 25: kuscia.proto.api.v1alpha1.Status
}
var file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_depIdxs = []int32{
	24, // 0: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	7,  // 1: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest.limit:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.GrantLimit
	21, // 2: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest.description:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest.DescriptionEntry
	25, // 3: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	2,  // 4: kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantResponse.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantResponseData
	6,  // 5: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrant.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantData
	4,  // 6: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrant.status:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantStatus
	5,  // 7: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantStatus.records:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.UseRecord
	7,  // 8: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantData.limit:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.GrantLimit
	22, // 9: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantData.description:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantData.DescriptionEntry
	24, // 10: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	7,  // 11: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest.limit:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.GrantLimit
	23, // 12: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest.description:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest.DescriptionEntry
	25, // 13: kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	24, // 14: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainDataGrantRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	25, // 15: kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainDataGrantResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	24, // 16: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	25, // 17: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	3,  // 18: kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantResponse.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrant
	24, // 19: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	12, // 20: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantRequest.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantRequestData
	25, // 21: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	3,  // 22: kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantResponse.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrant
	24, // 23: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantRequest.header:type_name -> kuscia.proto.api.v1alpha1.RequestHeader
	18, // 24: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantRequest.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantRequestData
	25, // 25: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantResponse.status:type_name -> kuscia.proto.api.v1alpha1.Status
	20, // 26: kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantResponse.data:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantList
	3,  // 27: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantList.domaindatagrant_list:type_name -> kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrant
	0,  // 28: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.CreateDomainDataGrant:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantRequest
	8,  // 29: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.UpdateDomainDataGrant:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantRequest
	10, // 30: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.DeleteDomainDataGrant:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainDataGrantRequest
	13, // 31: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.QueryDomainDataGrant:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantRequest
	15, // 32: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.BatchQueryDomainDataGrant:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantRequest
	17, // 33: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.ListDomainDataGrant:input_type -> kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantRequest
	1,  // 34: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.CreateDomainDataGrant:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.CreateDomainDataGrantResponse
	9,  // 35: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.UpdateDomainDataGrant:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.UpdateDomainDataGrantResponse
	11, // 36: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.DeleteDomainDataGrant:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.DeleteDomainDataGrantResponse
	14, // 37: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.QueryDomainDataGrant:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.QueryDomainDataGrantResponse
	16, // 38: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.BatchQueryDomainDataGrant:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.BatchQueryDomainDataGrantResponse
	19, // 39: kuscia.proto.api.v1alpha1.kusciaapi.DomainDataGrantService.ListDomainDataGrant:output_type -> kuscia.proto.api.v1alpha1.kusciaapi.ListDomainDataGrantResponse
	34, // [34:40] is the sub-list for method output_type
	28, // [28:34] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_init() }
func file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_init() {
	if File_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainDataGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainDataGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainDataGrantResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainDataGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainDataGrantStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainDataGrantData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainDataGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainDataGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainDataGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainDataGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDomainDataGrantRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDomainDataGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDomainDataGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchQueryDomainDataGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchQueryDomainDataGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDataGrantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDataGrantRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDataGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainDataGrantList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_goTypes,
		DependencyIndexes: file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_depIdxs,
		MessageInfos:      file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_msgTypes,
	}.Build()
	File_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto = out.File
	file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_rawDesc = nil
	file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_goTypes = nil
	file_kuscia_proto_api_v1alpha1_kusciaapi_domaindatagrant_proto_depIdxs = nil
}
