// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package kuscia.proto.api.v1alpha1.kusciatask;

option go_package = "github.com/secretflow/kuscia/proto/api/v1alpha1/kusciatask";

// Service represents the service address corresponding to the port.
message Service {
    // Name of port.
    string port_name = 1;
    // Endpoint list corresponding to the port.
    repeated string endpoints = 2;
}

// Party represents the basic information of the party.
message Party {
    // Name of party.
    string name = 1;
    // role carried by party. Examples: client, server...
    string role = 2;
    // List of services exposed by pod.
    repeated Service services = 3;
}

// ClusterDefine represents the information of all parties required by the task.
message ClusterDefine {
    // Basic information of all parties.
    repeated Party parties = 1;
    // index of self party.
    int32 self_party_idx = 2;
    // index of self endpoint.
    int32 self_endpoint_idx = 3;
}

// Port represents an allocated port for pod.
message Port {
    // Each named port in a pod must have a unique name.
    string name = 1;
    // Number of port allocated for pod.
    int32 port = 2;
    // Scope of port. Must be Cluster,Domain,Local.
    // Defaults to "Local".
    // +optional
    string scope = 3;
    // Protocol for port. Must be HTTP,GRPC.
    // Defaults to "HTTP".
    // +optional
    string protocol = 4;
}

// AllocatedPorts represents allocated ports for pod.
message AllocatedPorts {
    // Allocated ports.
    repeated Port ports = 1;
}