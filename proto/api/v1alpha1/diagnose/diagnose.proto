// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package kuscia.proto.api.v1alpha1.diagnose;

import "kuscia/proto/api/v1alpha1/common.proto";

option go_package = "github.com/secretflow/kuscia/proto/api/v1alpha1/diagnose";


// MockRequest represents diagnose mock request.
message MockRequest {
    int64 resp_body_size = 1; // the size of data which server returns
    int64 duration = 2; // the total duration waitted by server before returning data
    bool enable_chunked = 3; // chunk mode flag. If true, the data are returned in chunk
    int64 chunked_size = 4; // the size of every chunked data
    int64 chunked_interval = 5; // the returning interval between two chunked data
    bytes data = 6; // client data
}

message MockResponse {
    Status status = 1;
    bytes data = 2;
}

message StatusResponse {
    Status status = 1;
}

message RegisterEndpointRequest {
    string endpoint = 1;
}

message MetricItem {
    string name = 1;
    string detected_value = 2; // the detected value of metric
    string threshold = 3;
    string result = 4; // the result of metric, differs in [PASS], [WARNING], [FAIL]
    string information = 5; // human-readable information
}

message SubmitReportRequest {
    repeated MetricItem items = 1;
}
