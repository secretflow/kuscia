// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: kuscia/proto/api/v1alpha1/datamesh/flightdm.proto

package datamesh

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ContentType define ArrowSchema for flight data in DoGet Response and DoPut Request
// for ContentType = Table, ArrowSchema is defined by DomainData's columns
// for rest types, ArrowSchema is a dummy schema with one column of Binary Type
type ContentType int32

const (
	ContentType_Table ContentType = 0
	// read raw data from datasource
	ContentType_RAW ContentType = 1
	// the expected DoGet response content or the DoPut request content is  csv byte stream, currently not support
	ContentType_CSV ContentType = 2
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "Table",
		1: "RAW",
		2: "CSV",
	}
	ContentType_value = map[string]int32{
		"Table": 0,
		"RAW":   1,
		"CSV":   2,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{0}
}

// write options of csv file
type CSVWriteOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// field delimiter of csv file, default is comma
	FieldDelimiter string `protobuf:"bytes,1,opt,name=field_delimiter,json=fieldDelimiter,proto3" json:"field_delimiter,omitempty"`
}

func (x *CSVWriteOptions) Reset() {
	*x = CSVWriteOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSVWriteOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVWriteOptions) ProtoMessage() {}

func (x *CSVWriteOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVWriteOptions.ProtoReflect.Descriptor instead.
func (*CSVWriteOptions) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{0}
}

func (x *CSVWriteOptions) GetFieldDelimiter() string {
	if x != nil {
		return x.FieldDelimiter
	}
	return ""
}

// write options varies by file format
type FileWriteOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Options:
	//
	//	*FileWriteOptions_CsvOptions
	Options isFileWriteOptions_Options `protobuf_oneof:"Options"`
}

func (x *FileWriteOptions) Reset() {
	*x = FileWriteOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileWriteOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWriteOptions) ProtoMessage() {}

func (x *FileWriteOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWriteOptions.ProtoReflect.Descriptor instead.
func (*FileWriteOptions) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{1}
}

func (m *FileWriteOptions) GetOptions() isFileWriteOptions_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (x *FileWriteOptions) GetCsvOptions() *CSVWriteOptions {
	if x, ok := x.GetOptions().(*FileWriteOptions_CsvOptions); ok {
		return x.CsvOptions
	}
	return nil
}

type isFileWriteOptions_Options interface {
	isFileWriteOptions_Options()
}

type FileWriteOptions_CsvOptions struct {
	CsvOptions *CSVWriteOptions `protobuf:"bytes,2,opt,name=csv_options,json=csvOptions,proto3,oneof"`
}

func (*FileWriteOptions_CsvOptions) isFileWriteOptions_Options() {}

// call with GetSchema, return SchemaResult, extension attributes are set with metadata
type CommandGetDomainDataSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomaindataId string `protobuf:"bytes,1,opt,name=domaindata_id,json=domaindataId,proto3" json:"domaindata_id,omitempty"`
}

func (x *CommandGetDomainDataSchema) Reset() {
	*x = CommandGetDomainDataSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandGetDomainDataSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandGetDomainDataSchema) ProtoMessage() {}

func (x *CommandGetDomainDataSchema) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandGetDomainDataSchema.ProtoReflect.Descriptor instead.
func (*CommandGetDomainDataSchema) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{2}
}

func (x *CommandGetDomainDataSchema) GetDomaindataId() string {
	if x != nil {
		return x.DomaindataId
	}
	return ""
}

// call GetFlightInfo with CommandDomainDataQuery, return TicketDomainDataQuery
// and then call DoGet with TicketDomainDataQuery
type CommandDomainDataQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomaindataId string `protobuf:"bytes,1,opt,name=domaindata_id,json=domaindataId,proto3" json:"domaindata_id,omitempty"`
	// column name of DomainData's columns
	Columns []string `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	// expected content type of flight data from data proxy response
	// for domaindata with type != table, the content_type can only be RAW, other types will not take effect
	ContentType ContentType `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=kuscia.proto.api.v1alpha1.datamesh.ContentType" json:"content_type,omitempty"`
	// if content_type is CSV, you can set file_write_options
	FileWriteOptions *FileWriteOptions `protobuf:"bytes,4,opt,name=file_write_options,json=fileWriteOptions,proto3" json:"file_write_options,omitempty"`
}

func (x *CommandDomainDataQuery) Reset() {
	*x = CommandDomainDataQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDomainDataQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDomainDataQuery) ProtoMessage() {}

func (x *CommandDomainDataQuery) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDomainDataQuery.ProtoReflect.Descriptor instead.
func (*CommandDomainDataQuery) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{3}
}

func (x *CommandDomainDataQuery) GetDomaindataId() string {
	if x != nil {
		return x.DomaindataId
	}
	return ""
}

func (x *CommandDomainDataQuery) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *CommandDomainDataQuery) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_Table
}

func (x *CommandDomainDataQuery) GetFileWriteOptions() *FileWriteOptions {
	if x != nil {
		return x.FileWriteOptions
	}
	return nil
}

// call GetFlightInfo with CommandDomainDataUpdate, return TicketDomainDataQuery which is an update query
// and then call DoPut with TicketDomainDataQuery
type CommandDomainDataUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomaindataId string `protobuf:"bytes,1,opt,name=domaindata_id,json=domaindataId,proto3" json:"domaindata_id,omitempty"`
	// create an nonexistent domaindata and get a update ticket
	DomaindataRequest *CreateDomainDataRequest `protobuf:"bytes,2,opt,name=domaindata_request,json=domaindataRequest,proto3" json:"domaindata_request,omitempty"`
	// content type of flight data from client request
	// for domaindata with type != table, the content_type can only be RAW, other types will not take effect
	ContentType ContentType `protobuf:"varint,3,opt,name=content_type,json=contentType,proto3,enum=kuscia.proto.api.v1alpha1.datamesh.ContentType" json:"content_type,omitempty"`
	// for domaindata stored with file format in datasource , you can specify file_write_options
	FileWriteOptions *FileWriteOptions `protobuf:"bytes,4,opt,name=file_write_options,json=fileWriteOptions,proto3" json:"file_write_options,omitempty"`
	// extra options varies by datasource type
	ExtraOptions map[string]string `protobuf:"bytes,5,rep,name=extra_options,json=extraOptions,proto3" json:"extra_options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CommandDomainDataUpdate) Reset() {
	*x = CommandDomainDataUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDomainDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDomainDataUpdate) ProtoMessage() {}

func (x *CommandDomainDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDomainDataUpdate.ProtoReflect.Descriptor instead.
func (*CommandDomainDataUpdate) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{4}
}

func (x *CommandDomainDataUpdate) GetDomaindataId() string {
	if x != nil {
		return x.DomaindataId
	}
	return ""
}

func (x *CommandDomainDataUpdate) GetDomaindataRequest() *CreateDomainDataRequest {
	if x != nil {
		return x.DomaindataRequest
	}
	return nil
}

func (x *CommandDomainDataUpdate) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_Table
}

func (x *CommandDomainDataUpdate) GetFileWriteOptions() *FileWriteOptions {
	if x != nil {
		return x.FileWriteOptions
	}
	return nil
}

func (x *CommandDomainDataUpdate) GetExtraOptions() map[string]string {
	if x != nil {
		return x.ExtraOptions
	}
	return nil
}

type TicketDomainDataQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a unique identifier related to a DomainData query
	DomaindataHandle string `protobuf:"bytes,1,opt,name=domaindata_handle,json=domaindataHandle,proto3" json:"domaindata_handle,omitempty"`
}

func (x *TicketDomainDataQuery) Reset() {
	*x = TicketDomainDataQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketDomainDataQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketDomainDataQuery) ProtoMessage() {}

func (x *TicketDomainDataQuery) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketDomainDataQuery.ProtoReflect.Descriptor instead.
func (*TicketDomainDataQuery) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{5}
}

func (x *TicketDomainDataQuery) GetDomaindataHandle() string {
	if x != nil {
		return x.DomaindataHandle
	}
	return ""
}

// call DoAction with ActionCreateDomainDataRequest, return ActionCreateDomainDataResponse
type ActionCreateDomainDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *CreateDomainDataRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ActionCreateDomainDataRequest) Reset() {
	*x = ActionCreateDomainDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCreateDomainDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCreateDomainDataRequest) ProtoMessage() {}

func (x *ActionCreateDomainDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCreateDomainDataRequest.ProtoReflect.Descriptor instead.
func (*ActionCreateDomainDataRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{6}
}

func (x *ActionCreateDomainDataRequest) GetRequest() *CreateDomainDataRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ActionCreateDomainDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *CreateDomainDataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionCreateDomainDataResponse) Reset() {
	*x = ActionCreateDomainDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionCreateDomainDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCreateDomainDataResponse) ProtoMessage() {}

func (x *ActionCreateDomainDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCreateDomainDataResponse.ProtoReflect.Descriptor instead.
func (*ActionCreateDomainDataResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{7}
}

func (x *ActionCreateDomainDataResponse) GetResponse() *CreateDomainDataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// call DoAction with ActionQueryDomainDataRequest, return ActionQueryDomainDataResponse
type ActionQueryDomainDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *QueryDomainDataRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ActionQueryDomainDataRequest) Reset() {
	*x = ActionQueryDomainDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionQueryDomainDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionQueryDomainDataRequest) ProtoMessage() {}

func (x *ActionQueryDomainDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionQueryDomainDataRequest.ProtoReflect.Descriptor instead.
func (*ActionQueryDomainDataRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{8}
}

func (x *ActionQueryDomainDataRequest) GetRequest() *QueryDomainDataRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ActionQueryDomainDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *QueryDomainDataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionQueryDomainDataResponse) Reset() {
	*x = ActionQueryDomainDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionQueryDomainDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionQueryDomainDataResponse) ProtoMessage() {}

func (x *ActionQueryDomainDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionQueryDomainDataResponse.ProtoReflect.Descriptor instead.
func (*ActionQueryDomainDataResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{9}
}

func (x *ActionQueryDomainDataResponse) GetResponse() *QueryDomainDataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// call DoAction with ActionUpdateDomainDataRequest, return ActionUpdateDomainDataResponse
type ActionUpdateDomainDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *UpdateDomainDataRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ActionUpdateDomainDataRequest) Reset() {
	*x = ActionUpdateDomainDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionUpdateDomainDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionUpdateDomainDataRequest) ProtoMessage() {}

func (x *ActionUpdateDomainDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionUpdateDomainDataRequest.ProtoReflect.Descriptor instead.
func (*ActionUpdateDomainDataRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{10}
}

func (x *ActionUpdateDomainDataRequest) GetRequest() *UpdateDomainDataRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ActionUpdateDomainDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *UpdateDomainDataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionUpdateDomainDataResponse) Reset() {
	*x = ActionUpdateDomainDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionUpdateDomainDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionUpdateDomainDataResponse) ProtoMessage() {}

func (x *ActionUpdateDomainDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionUpdateDomainDataResponse.ProtoReflect.Descriptor instead.
func (*ActionUpdateDomainDataResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{11}
}

func (x *ActionUpdateDomainDataResponse) GetResponse() *UpdateDomainDataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// call DoAction with ActionDeleteDomainDataRequest, return ActionDeleteDomainDataResponse
type ActionDeleteDomainDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *DeleteDomainDataRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	// not supported now
	PhysicalDeletion bool `protobuf:"varint,2,opt,name=physical_deletion,json=physicalDeletion,proto3" json:"physical_deletion,omitempty"`
}

func (x *ActionDeleteDomainDataRequest) Reset() {
	*x = ActionDeleteDomainDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDeleteDomainDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDeleteDomainDataRequest) ProtoMessage() {}

func (x *ActionDeleteDomainDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDeleteDomainDataRequest.ProtoReflect.Descriptor instead.
func (*ActionDeleteDomainDataRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{12}
}

func (x *ActionDeleteDomainDataRequest) GetRequest() *DeleteDomainDataRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ActionDeleteDomainDataRequest) GetPhysicalDeletion() bool {
	if x != nil {
		return x.PhysicalDeletion
	}
	return false
}

type ActionDeleteDomainDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *DeleteDomainDataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionDeleteDomainDataResponse) Reset() {
	*x = ActionDeleteDomainDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionDeleteDomainDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionDeleteDomainDataResponse) ProtoMessage() {}

func (x *ActionDeleteDomainDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionDeleteDomainDataResponse.ProtoReflect.Descriptor instead.
func (*ActionDeleteDomainDataResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{13}
}

func (x *ActionDeleteDomainDataResponse) GetResponse() *DeleteDomainDataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// call DoAction with ActionQueryDomainDataSourceRequest, return ActionQueryDomainDataSourceResponse
type ActionQueryDomainDataSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *QueryDomainDataSourceRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ActionQueryDomainDataSourceRequest) Reset() {
	*x = ActionQueryDomainDataSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionQueryDomainDataSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionQueryDomainDataSourceRequest) ProtoMessage() {}

func (x *ActionQueryDomainDataSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionQueryDomainDataSourceRequest.ProtoReflect.Descriptor instead.
func (*ActionQueryDomainDataSourceRequest) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{14}
}

func (x *ActionQueryDomainDataSourceRequest) GetRequest() *QueryDomainDataSourceRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ActionQueryDomainDataSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *QueryDomainDataSourceResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ActionQueryDomainDataSourceResponse) Reset() {
	*x = ActionQueryDomainDataSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionQueryDomainDataSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionQueryDomainDataSourceResponse) ProtoMessage() {}

func (x *ActionQueryDomainDataSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionQueryDomainDataSourceResponse.ProtoReflect.Descriptor instead.
func (*ActionQueryDomainDataSourceResponse) Descriptor() ([]byte, []int) {
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP(), []int{15}
}

func (x *ActionQueryDomainDataSourceResponse) GetResponse() *QueryDomainDataSourceResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto protoreflect.FileDescriptor

var file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDesc = []byte{
	0x0a, 0x31, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x6d, 0x65, 0x73, 0x68, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x64, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x22, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x1a, 0x33, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68,
	0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x0f, 0x43, 0x53, 0x56, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x0b, 0x63, 0x73, 0x76, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x43, 0x53, 0x56, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x73, 0x76, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x09, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x41, 0x0a, 0x1a, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22, 0x8f, 0x02,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x12, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x10, 0x66,
	0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x97, 0x04, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64,
	0x12, 0x6a, 0x0a, 0x12, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x62, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x72, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x15, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x76, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x55, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x1e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x75,
	0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x1d, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x1e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x1d, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x11, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7a, 0x0a,
	0x1e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x22, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x84, 0x01, 0x0a,
	0x23, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0x2a, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x52, 0x41, 0x57, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53, 0x56, 0x10, 0x02, 0x42,
	0x5c, 0x0a, 0x20, 0x6f, 0x72, 0x67, 0x2e, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x6d,
	0x65, 0x73, 0x68, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x6b, 0x75, 0x73, 0x63, 0x69,
	0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x65, 0x73, 0x68, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescOnce sync.Once
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescData = file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDesc
)

func file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescGZIP() []byte {
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescOnce.Do(func() {
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescData = protoimpl.X.CompressGZIP(file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescData)
	})
	return file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDescData
}

var file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_goTypes = []interface{}{
	(ContentType)(0),                            // 0: kuscia.proto.api.v1alpha1.datamesh.ContentType
	(*CSVWriteOptions)(nil),                     // 1: kuscia.proto.api.v1alpha1.datamesh.CSVWriteOptions
	(*FileWriteOptions)(nil),                    // 2: kuscia.proto.api.v1alpha1.datamesh.FileWriteOptions
	(*CommandGetDomainDataSchema)(nil),          // 3: kuscia.proto.api.v1alpha1.datamesh.CommandGetDomainDataSchema
	(*CommandDomainDataQuery)(nil),              // 4: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataQuery
	(*CommandDomainDataUpdate)(nil),             // 5: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate
	(*TicketDomainDataQuery)(nil),               // 6: kuscia.proto.api.v1alpha1.datamesh.TicketDomainDataQuery
	(*ActionCreateDomainDataRequest)(nil),       // 7: kuscia.proto.api.v1alpha1.datamesh.ActionCreateDomainDataRequest
	(*ActionCreateDomainDataResponse)(nil),      // 8: kuscia.proto.api.v1alpha1.datamesh.ActionCreateDomainDataResponse
	(*ActionQueryDomainDataRequest)(nil),        // 9: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataRequest
	(*ActionQueryDomainDataResponse)(nil),       // 10: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataResponse
	(*ActionUpdateDomainDataRequest)(nil),       // 11: kuscia.proto.api.v1alpha1.datamesh.ActionUpdateDomainDataRequest
	(*ActionUpdateDomainDataResponse)(nil),      // 12: kuscia.proto.api.v1alpha1.datamesh.ActionUpdateDomainDataResponse
	(*ActionDeleteDomainDataRequest)(nil),       // 13: kuscia.proto.api.v1alpha1.datamesh.ActionDeleteDomainDataRequest
	(*ActionDeleteDomainDataResponse)(nil),      // 14: kuscia.proto.api.v1alpha1.datamesh.ActionDeleteDomainDataResponse
	(*ActionQueryDomainDataSourceRequest)(nil),  // 15: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataSourceRequest
	(*ActionQueryDomainDataSourceResponse)(nil), // 16: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataSourceResponse
	nil,                                   // 17: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate.ExtraOptionsEntry
	(*CreateDomainDataRequest)(nil),       // 18: kuscia.proto.api.v1alpha1.datamesh.CreateDomainDataRequest
	(*CreateDomainDataResponse)(nil),      // 19: kuscia.proto.api.v1alpha1.datamesh.CreateDomainDataResponse
	(*QueryDomainDataRequest)(nil),        // 20: kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataRequest
	(*QueryDomainDataResponse)(nil),       // 21: kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataResponse
	(*UpdateDomainDataRequest)(nil),       // 22: kuscia.proto.api.v1alpha1.datamesh.UpdateDomainDataRequest
	(*UpdateDomainDataResponse)(nil),      // 23: kuscia.proto.api.v1alpha1.datamesh.UpdateDomainDataResponse
	(*DeleteDomainDataRequest)(nil),       // 24: kuscia.proto.api.v1alpha1.datamesh.DeleteDomainDataRequest
	(*DeleteDomainDataResponse)(nil),      // 25: kuscia.proto.api.v1alpha1.datamesh.DeleteDomainDataResponse
	(*QueryDomainDataSourceRequest)(nil),  // 26: kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataSourceRequest
	(*QueryDomainDataSourceResponse)(nil), // 27: kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataSourceResponse
}
var file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_depIdxs = []int32{
	1,  // 0: kuscia.proto.api.v1alpha1.datamesh.FileWriteOptions.csv_options:type_name -> kuscia.proto.api.v1alpha1.datamesh.CSVWriteOptions
	0,  // 1: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataQuery.content_type:type_name -> kuscia.proto.api.v1alpha1.datamesh.ContentType
	2,  // 2: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataQuery.file_write_options:type_name -> kuscia.proto.api.v1alpha1.datamesh.FileWriteOptions
	18, // 3: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate.domaindata_request:type_name -> kuscia.proto.api.v1alpha1.datamesh.CreateDomainDataRequest
	0,  // 4: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate.content_type:type_name -> kuscia.proto.api.v1alpha1.datamesh.ContentType
	2,  // 5: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate.file_write_options:type_name -> kuscia.proto.api.v1alpha1.datamesh.FileWriteOptions
	17, // 6: kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate.extra_options:type_name -> kuscia.proto.api.v1alpha1.datamesh.CommandDomainDataUpdate.ExtraOptionsEntry
	18, // 7: kuscia.proto.api.v1alpha1.datamesh.ActionCreateDomainDataRequest.request:type_name -> kuscia.proto.api.v1alpha1.datamesh.CreateDomainDataRequest
	19, // 8: kuscia.proto.api.v1alpha1.datamesh.ActionCreateDomainDataResponse.response:type_name -> kuscia.proto.api.v1alpha1.datamesh.CreateDomainDataResponse
	20, // 9: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataRequest.request:type_name -> kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataRequest
	21, // 10: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataResponse.response:type_name -> kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataResponse
	22, // 11: kuscia.proto.api.v1alpha1.datamesh.ActionUpdateDomainDataRequest.request:type_name -> kuscia.proto.api.v1alpha1.datamesh.UpdateDomainDataRequest
	23, // 12: kuscia.proto.api.v1alpha1.datamesh.ActionUpdateDomainDataResponse.response:type_name -> kuscia.proto.api.v1alpha1.datamesh.UpdateDomainDataResponse
	24, // 13: kuscia.proto.api.v1alpha1.datamesh.ActionDeleteDomainDataRequest.request:type_name -> kuscia.proto.api.v1alpha1.datamesh.DeleteDomainDataRequest
	25, // 14: kuscia.proto.api.v1alpha1.datamesh.ActionDeleteDomainDataResponse.response:type_name -> kuscia.proto.api.v1alpha1.datamesh.DeleteDomainDataResponse
	26, // 15: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataSourceRequest.request:type_name -> kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataSourceRequest
	27, // 16: kuscia.proto.api.v1alpha1.datamesh.ActionQueryDomainDataSourceResponse.response:type_name -> kuscia.proto.api.v1alpha1.datamesh.QueryDomainDataSourceResponse
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_init() }
func file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_init() {
	if File_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto != nil {
		return
	}
	file_kuscia_proto_api_v1alpha1_datamesh_domaindata_proto_init()
	file_kuscia_proto_api_v1alpha1_datamesh_domaindatasource_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSVWriteOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileWriteOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandGetDomainDataSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDomainDataQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDomainDataUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketDomainDataQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCreateDomainDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionCreateDomainDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionQueryDomainDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionQueryDomainDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionUpdateDomainDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionUpdateDomainDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDeleteDomainDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionDeleteDomainDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionQueryDomainDataSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionQueryDomainDataSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*FileWriteOptions_CsvOptions)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_goTypes,
		DependencyIndexes: file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_depIdxs,
		EnumInfos:         file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_enumTypes,
		MessageInfos:      file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_msgTypes,
	}.Build()
	File_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto = out.File
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_rawDesc = nil
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_goTypes = nil
	file_kuscia_proto_api_v1alpha1_datamesh_flightdm_proto_depIdxs = nil
}
