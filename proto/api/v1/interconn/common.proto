// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/struct.proto";

package kuscia.proto.api.v1.interconn;

option go_package = "github.com/secretflow/kuscia/proto/api/v1/interconn";

// CommonResponse defines the response for request.
message CommonResponse {
    int32 code = 1;
    string msg = 2;
    google.protobuf.Struct data = 3;
}

// ComponentIO defines input and output of component.
message ComponentIO {
    string type = 1;
    string key = 2;
}

// Config defines parameter configuration for each component, etc.
message Config {
    ConfigRole role = 1;
    ConfigInitiator initiator = 2;
    ConfigParams job_params = 3;
    ConfigParams task_params = 4;
    string version = 5;
}

// ConfigInitiator defines config initiator information.
message ConfigInitiator {
    string role = 1;
    string node_id = 2;
}

// ConfigInitiator defines config role information.
message ConfigRole {
    repeated string arbiter = 1;
    repeated string host = 2;
    repeated string guest = 3;
}

// ConfigInitiator defines config params information.
message ConfigParams {
    google.protobuf.Struct host = 1;
    google.protobuf.Struct arbiter = 2;
    google.protobuf.Struct guest = 3;
    google.protobuf.Struct common = 4;
}

// ConfigInitiator defines config Resources information.
message ConfigResources {
    int32 disk = 1;
    int32 memory = 2;
    int32 cpu = 3;
}