version: 2.1

executors:
  linux_x64_executor:
    docker:
      - image: secretflow/kuscia-ci:0.4
    resource_class: 2xlarge
    shell: /bin/bash --login -eo pipefail
  linux_aarch64_executor:
    docker:
      - image: secretflow/ubuntu-base-ci:latest
    resource_class: arm.2xlarge
    shell: /bin/bash --login -eo pipefail

commands:
  build_kuscia_deps:
    steps:
      - setup_remote_docker
      - run:
          name: "install go"
          command: |
            ARCH=$(uname -m)
            case "$ARCH" in
            x86_64) ARCH="amd64";;
            aarch64) ARCH="arm64";;
            *) echo "Unsupported architecture"; exit 1;;
            esac
            
            GOLANG_DIR="/usr/local"
            GOLANG_VERSION="1.22.2"
            GOLANG_URL="https://golang.org/dl/go${GOLANG_VERSION}.linux-${ARCH}.tar.gz"
            
            if ! command -v go &> /dev/null; then
            wget "$GOLANG_URL"
            tar -C "$GOLANG_DIR" -xzf "go${GOLANG_VERSION}.linux-${ARCH}.tar.gz"
            echo 'export PATH=$PATH:/usr/local/go/bin' | tee -a ~/.bashrc
            echo 'export PATH=$PATH:/usr/local/go/bin' >> $BASH_ENV
            source ~/.bashrc
            fi
      - run:
          name: "make build"
          command: |
            git config --global --add safe.directory ./
            make deps-build
      - store_artifacts:
          path: build


jobs:
  build_kuscia_deps:
    machine: true
    executor: >
    parameters:
      executor:
        type: executor
        default: linux_x64_executor
    steps:
      - checkout
      - build_kuscia_deps
 image_publish:
    docker:
      - image: secretflow/kuscia-ci:0.4
    shell: /bin/bash --login -eo pipefail
    steps:
      - attach_workspace:
          at: build
      - checkout
      - setup_remote_docker
      - run:
          name: Build image and publish
          command: |
            DEPS_IMAGE = secretflow-registry.cn-hangzhou.cr.aliyuncs.com/secretflow/kuscia-deps:0.5.0b0
             # login kuscia aliyun registry
            docker login -u ${ALIYUN_DOCKER_USERNAME} -p ${ALIYUN_DOCKER_PASSWORD}  secretflow-registry.cn-hangzhou.cr.aliyuncs.com
            
            docker buildx create --name kuscia_deps --platform linux/arm64,linux/amd64 --use
            
            docker buildx build -t ${DEPS_IMAGE}:${CIRCLETAG} --platform linux/arm64,linux/amd64 -f ./build/dockerfile/base/kuscia-deps.Dockerfile . --push
           
            

workflows:
  build_deps_workflow:
    jobs:
      - build_kuscia_deps:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          when: manual
      - image_publish:
          requires:
            - build_kuscia_deps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          when: manual