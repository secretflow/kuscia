---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: clusterdomainroutes.kuscia.secretflow
spec:
  group: kuscia.secretflow
  names:
    kind: ClusterDomainRoute
    listKind: ClusterDomainRouteList
    plural: clusterdomainroutes
    shortNames:
    - cdr
    singular: clusterdomainroute
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.source
      name: Source
      type: string
    - jsonPath: .spec.destination
      name: Destination
      type: string
    - jsonPath: .spec.endpoint.host
      name: Host
      type: string
    - jsonPath: .spec.authenticationType
      name: Authentication
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterDomainRoute defines the routing rules between domains
          on the center side.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterDomainRouteSpec is a description of ClusterDomainRoute.
            properties:
              authenticationType:
                description: AuthenticationType describes how destination authenticates
                  the source's request.
                type: string
              bodyEncryption:
                description: BodyEncryption defines detailed parameters for body encryption.
                properties:
                  algorithm:
                    enum:
                    - AES
                    - SM4
                    type: string
                required:
                - algorithm
                type: object
              destination:
                description: Destination namespace.
                type: string
              endpoint:
                description: Endpoint defines address for the source to access destination.
                properties:
                  host:
                    type: string
                  ports:
                    items:
                      description: DomainPort defines the port information of domain.
                      properties:
                        isTLS:
                          type: boolean
                        name:
                          type: string
                        pathPrefix:
                          type: string
                        port:
                          type: integer
                        protocol:
                          description: DomainRouteProtocolType defines protocol type
                            supported by the port.
                          enum:
                          - HTTP
                          - GRPC
                          type: string
                      required:
                      - name
                      - port
                      - protocol
                      type: object
                    type: array
                type: object
              interConnProtocol:
                description: Interconnection Protocol
                type: string
              mTLSConfig:
                description: DomainRouteMTLSConfig defines the configuration required
                  by mTLS.
                properties:
                  sourceClientCert:
                    description: SourceClientCert is issued by the local self-signed
                      CA of destination. When MTLS is only used as the communication
                      layer, it can be generated based on the randomly generated public
                      key. When MTLS is used for authentication, it needs to be generated
                      based on the authorized public key of the source. Must be base64
                      encoded.
                    type: string
                  sourceClientPrivateKey:
                    description: When MTLS is only used as the communication layer,
                      the public and private keys can be randomly generated by the
                      destination. The public key is ultimately used to generate the
                      MTLS certificate, and the private key needs to be given to the
                      source. When MTLS is used for authentication, the sourceClientKey
                      should be the local private key of the source. There is no need
                      to specify it here. Must be base64 encoded.
                    type: string
                  tlsCA:
                    description: The tls certificate is used to verify the https server.
                      Must be base64 encoded.
                    type: string
                type: object
              requestHeadersToAdd:
                additionalProperties:
                  type: string
                description: add specified headers to requests from source.
                type: object
              source:
                description: Source namespace.
                type: string
              sourceWhiteIPList:
                description: Whitelist of source IP address or CIDR. If it is empty,
                  the source ip will not be checked.
                items:
                  type: string
                type: array
              tokenConfig:
                description: TokenConfig is used to realize authentication by negotiating
                  token.
                properties:
                  destinationPublicKey:
                    description: Destination namespace RSA public key, must be base64
                      encoded.
                    type: string
                  rollingUpdatePeriod:
                    description: Token periodic rolling update interval in seconds,
                      0 means no update. It is recommended that this value not be
                      less than 300, otherwise the controller may have problems processing
                      it.
                    minimum: 0
                    type: integer
                  sourcePublicKey:
                    description: Source namespace RSA public key, must be base64 encoded.
                    type: string
                  tokenGenMethod:
                    description: Token generation method.
                    enum:
                    - RSA-GEN
                    - UID-RSA-GEN
                    type: string
                required:
                - tokenGenMethod
                type: object
              transit:
                description: Transit entity. If transitMethod is THIRD-DOMAIN, requests
                  from source to destination need to be transferred through a third
                  party, domain field must be set. If transitMethod is REVERSE-TUNNEL,
                  requests from source to destination need to be transferred through
                  local gateway chunked transfer encoding.
                properties:
                  domain:
                    description: DomainTransit defines the information of the third
                      domain.
                    properties:
                      domainID:
                        type: string
                    required:
                    - domainID
                    type: object
                  transitMethod:
                    description: TransitMethod means to forward the request through
                      a specific entity, THIRD-DOMAIN by default.
                    enum:
                    - THIRD-DOMAIN
                    - REVERSE-TUNNEL
                    type: string
                type: object
            required:
            - authenticationType
            - destination
            - source
            type: object
          status:
            description: ClusterDomainRouteStatus defines the observed state of ClusterDomainRoute
            properties:
              conditions:
                description: Conditions is an array of current observed ClusterDomainRoute
                  conditions.
                items:
                  description: ClusterDomainRouteCondition describes the state of
                    a ClusterDomainRoute at a certain point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: The last time this condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human-readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of ClusterDomainRoute condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              endpointStatuses:
                additionalProperties:
                  description: ClusterDomainRouteEndpointStatus describes the health
                    status of the endpoint.
                  properties:
                    endpointHealthy:
                      description: Whether the connection state from the gateway instance
                        of the source node to the endpoint is healthy.
                      type: boolean
                  required:
                  - endpointHealthy
                  type: object
                description: EndpointStatuses shows the health status from all gateway
                  instance of the source domain to the endpoint.
                type: object
              tokenStatus:
                description: ClusterDomainRouteTokenStatus represents the status information
                  related to token authentication.
                properties:
                  destinationTokens:
                    description: DestinationTokens keeps the most recently two generated
                      tokens.
                    items:
                      description: DomainRouteToken represents a generated token.
                      properties:
                        effectiveInstances:
                          description: Record effective instances
                          items:
                            type: string
                          type: array
                        expirationTime:
                          description: Timestamp representing the time when this revision
                            expirated.
                          format: date-time
                          type: string
                        isReady:
                          description: Token is ready to use
                          type: boolean
                        revision:
                          description: A sequence number representing a specific generation.
                          format: int64
                          type: integer
                        revisionTime:
                          description: Timestamp representing the time when this revision
                            created.
                          format: date-time
                          type: string
                        token:
                          description: Generated token.
                          type: string
                      required:
                      - isReady
                      type: object
                    type: array
                  revision:
                    description: A sequence number representing a specific generation.
                    format: int64
                    type: integer
                  revisionTime:
                    description: Timestamp representing the time when this revision
                      created.
                    format: date-time
                    type: string
                  sourceTokens:
                    description: SourceTokens keeps the most recently two generated
                      tokens.
                    items:
                      description: DomainRouteToken represents a generated token.
                      properties:
                        effectiveInstances:
                          description: Record effective instances
                          items:
                            type: string
                          type: array
                        expirationTime:
                          description: Timestamp representing the time when this revision
                            expirated.
                          format: date-time
                          type: string
                        isReady:
                          description: Token is ready to use
                          type: boolean
                        revision:
                          description: A sequence number representing a specific generation.
                          format: int64
                          type: integer
                        revisionTime:
                          description: Timestamp representing the time when this revision
                            created.
                          format: date-time
                          type: string
                        token:
                          description: Generated token.
                          type: string
                      required:
                      - isReady
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
